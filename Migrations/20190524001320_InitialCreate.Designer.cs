// <auto-generated />
using System;
using CotizacionesPersonales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace cotizacionesPersonales.Migrations
{
    [DbContext(typeof(CotizacionesContext))]
    [Migration("20190524001320_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CotizacionesPersonales.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionCliente");

                    b.Property<string>("EmailCliente")
                        .IsRequired();

                    b.Property<string>("NombreCliente")
                        .IsRequired();

                    b.Property<string>("TelefonoCliente");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteID = 1,
                            DireccionCliente = "Santiago de los Caballeros",
                            EmailCliente = "yonaides@gmail.com",
                            NombreCliente = "Yonaides Tavares",
                            TelefonoCliente = "829-883-6835"
                        });
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.Cotizacion", b =>
                {
                    b.Property<int>("CotizacionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteID");

                    b.Property<DateTime>("FechaCotizacion");

                    b.Property<decimal>("MontoTotal");

                    b.HasKey("CotizacionID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Cotizacion");
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.CotizacionDetalle", b =>
                {
                    b.Property<int>("CotizacionDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CotizacionID");

                    b.Property<DateTime>("FechaCotizacion");

                    b.Property<int>("ServicioID");

                    b.Property<decimal>("precioServicio");

                    b.HasKey("CotizacionDetalleID");

                    b.HasIndex("CotizacionID");

                    b.HasIndex("ServicioID");

                    b.ToTable("CotizacionDetalle");
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionServicio");

                    b.Property<string>("NombreServicio")
                        .IsRequired();

                    b.Property<decimal>("PrecioServicio");

                    b.HasKey("ServicioID");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.ServicioDetalle", b =>
                {
                    b.Property<int>("ServicioDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDetalleServicio")
                        .IsRequired();

                    b.Property<int>("ServicioID");

                    b.HasKey("ServicioDetalleID");

                    b.HasIndex("ServicioID");

                    b.ToTable("ServicioDetalle");
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.Cotizacion", b =>
                {
                    b.HasOne("CotizacionesPersonales.Models.Cliente", "ClienteId")
                        .WithMany("Cotizacion")
                        .HasForeignKey("ClienteID");
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.CotizacionDetalle", b =>
                {
                    b.HasOne("CotizacionesPersonales.Models.Cotizacion", "CotizacionId")
                        .WithMany("CotizacionDetalle")
                        .HasForeignKey("CotizacionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CotizacionesPersonales.Models.Servicio", "ServicioId")
                        .WithMany()
                        .HasForeignKey("ServicioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CotizacionesPersonales.Models.ServicioDetalle", b =>
                {
                    b.HasOne("CotizacionesPersonales.Models.Servicio", "ServicioId")
                        .WithMany("ServicioDetalle")
                        .HasForeignKey("ServicioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
